// WordPress webpack config.
const defaultConfig = require( '@wordpress/scripts/config/webpack.config' );

// Plugins.
const RemoveEmptyScriptsPlugin = require( 'webpack-remove-empty-scripts' );
const CopyPlugin = require('copy-webpack-plugin');

// Utilities.
const path = require( 'path' );

// Add any a new entry point by extending the webpack config.
const config = {
	...defaultConfig,
	...{
		entry: {
			'js/utk':  path.resolve( process.cwd(), 'src/js', 'utk.js' ),
			'js/search-slider': path.resolve( process.cwd(), 'src/js', 'search-slider.js' ),
			'style':  path.resolve( process.cwd(), 'src', 'style.scss' ),
			'editor-style': path.resolve( process.cwd(), 'src', 'editor-style.scss' ),
		},
		plugins: [
			// Include WP's plugin config.
			...defaultConfig.plugins,

			// Removes the empty `.js` files generated by webpack but
			// sets it after WP has generated its `*.asset.php` file.
			new RemoveEmptyScriptsPlugin( {
				stage: RemoveEmptyScriptsPlugin.STAGE_AFTER_PROCESS_PLUGINS
			} ),
      new CopyPlugin({
        patterns: [
          { from: 'src/screenshot.png' },
          { from: 'src/readme.txt' },
          { from: 'src/theme.json' },
          { from: 'src/assets', to: 'assets' },
          { from: 'src/parts', to: 'parts' },
          { from: 'src/templates', to: 'templates' }, 
        ]
      })
		]
	}
};

// Overwrite default config to use style.css for theme stylesheet.
config.optimization.splitChunks.cacheGroups.style.name = ( _, chunks, cacheGroupKey ) => {
  const chunkName = chunks[ 0 ].name;
  return `${ path.dirname(
    chunkName
  ) }/${ path.basename( chunkName ) }`;
}

module.exports = config; 